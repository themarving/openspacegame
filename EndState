//
//  EndState.swift
//  Open Space Game
//
//  Created by Marvin GÃ¼nther on 02.03.23.
//

import SpriteKit

class EndState: SKScene {
    
    override func didMove(to view: SKView) {
        let scoreKey = "scoreKey"
        let defaults = UserDefaults.standard
        var highestScore = defaults.integer(forKey: scoreKey)
        
        self.backgroundColor = backgroundColorCustom
        
        // animating stars
        if let stars = SKEmitterNode(fileNamed: "Stars") {
            stars.position = CGPoint(x: 0, y: 0)
            stars.advanceSimulationTime(60)
            stars.zPosition = 0
            addChild(stars)
        }
        
        introShip.position = CGPoint(x: -775, y: -170)
        introShip.setScale(0.2)
        introShip.zRotation = .pi * 1.5
        introShip.zPosition = 1
        addChild(introShip)
        
        introRocketFlame.position = CGPoint(x: -775, y: -170)
        introRocketFlame.setScale(0.2)
        introRocketFlame.zRotation = .pi * 1.5
        introRocketFlame.zPosition = 0.9
        addChild(introRocketFlame)
        
        // showing current score
        scoreLabel = SKLabelNode(fontNamed: "PingFangTC-Semibold")
        scoreLabel.position = CGPoint(x: 0, y: 120)
        scoreLabel.text = "Score: \(score)"
        scoreLabel.zPosition = 2
        scoreLabel.fontSize = 60
        scoreLabel.fontColor = SKColor.white
        addChild(scoreLabel)
        
        // saving highscore
        if score > highestScore {
            highestScore = score
            let defaults = UserDefaults.standard
            defaults.set(highestScore, forKey: scoreKey)
        }
        
        // showing highest score
        var highscoreLabel: SKLabelNode!
        highscoreLabel = SKLabelNode(fontNamed: "PingFangTC-Semibold")
        highscoreLabel.position = CGPoint(x: 0, y: 0)
        highscoreLabel.text = "Highscore: \(highestScore)"
        highscoreLabel.zPosition = 2
        highscoreLabel.fontSize = 70
        highscoreLabel.fontColor = SKColor.white
        addChild(highscoreLabel)
    }
    
    override func update(_ currentTime: TimeInterval) {
        if introShip.position.x == 850 {
            introShip.position.x = -775
            introRocketFlame.position.x = -775
            
            introShip2.position.x = 775
            introRocketFlame2.position.x = 775
            
            moveIntroShip()
            moveIntroTail()
        }
    }
    
    func moveIntroShip() {
        let moveShip = SKAction.moveTo(x: 850, duration: 4.0)
        introShip.run(moveShip)
    }
    
    func moveIntroTail() {
        let moveShip = SKAction.moveTo(x: 850, duration: 4.0)
        introRocketFlame.run(moveShip)
    }

}
